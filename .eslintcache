[{"/Users/johnornelas/projects/travel-remotely/src/reportWebVitals.js":"1","/Users/johnornelas/projects/travel-remotely/src/index.js":"2","/Users/johnornelas/projects/travel-remotely/src/components/Videobackground/Videobackground.tsx":"3","/Users/johnornelas/projects/travel-remotely/src/data/tokyo.ts":"4","/Users/johnornelas/projects/travel-remotely/src/data/cities.ts":"5","/Users/johnornelas/projects/travel-remotely/src/components/Controls/Controls.tsx":"6","/Users/johnornelas/projects/travel-remotely/src/data/sanfrancisco.ts":"7","/Users/johnornelas/projects/travel-remotely/src/components/Controls/index.ts":"8","/Users/johnornelas/projects/travel-remotely/src/data/variables.ts":"9","/Users/johnornelas/projects/travel-remotely/src/utils/getRandomFromList.ts":"10","/Users/johnornelas/projects/travel-remotely/src/data/bangkok.ts":"11","/Users/johnornelas/projects/travel-remotely/src/data/paris.ts":"12","/Users/johnornelas/projects/travel-remotely/src/data/london.ts":"13","/Users/johnornelas/projects/travel-remotely/src/data/dubai.ts":"14","/Users/johnornelas/projects/travel-remotely/src/data/singapore.ts":"15","/Users/johnornelas/projects/travel-remotely/src/data/kuala-lumpur.ts":"16","/Users/johnornelas/projects/travel-remotely/src/data/newyorkcity.ts":"17","/Users/johnornelas/projects/travel-remotely/src/data/istanbul.ts":"18"},{"size":362,"mtime":1609536298521,"results":"19","hashOfConfig":"20"},{"size":515,"mtime":1609538832922,"results":"21","hashOfConfig":"20"},{"size":3393,"mtime":1610237433082,"results":"22","hashOfConfig":"20"},{"size":4713,"mtime":1610253506558,"results":"23","hashOfConfig":"20"},{"size":485,"mtime":1610246010090,"results":"24","hashOfConfig":"20"},{"size":7001,"mtime":1609669915770,"results":"25","hashOfConfig":"20"},{"size":2964,"mtime":1610252230197,"results":"26","hashOfConfig":"20"},{"size":65,"mtime":1609548715012,"results":"27","hashOfConfig":"20"},{"size":2128,"mtime":1609632272396,"results":"28","hashOfConfig":"20"},{"size":99,"mtime":1609620794565,"results":"29","hashOfConfig":"20"},{"size":2343,"mtime":1610237507240,"results":"30","hashOfConfig":"20"},{"size":2054,"mtime":1609667441398,"results":"31","hashOfConfig":"20"},{"size":3541,"mtime":1610246613002,"results":"32","hashOfConfig":"20"},{"size":2603,"mtime":1609721864626,"results":"33","hashOfConfig":"20"},{"size":2850,"mtime":1610239444055,"results":"34","hashOfConfig":"20"},{"size":4179,"mtime":1610242358720,"results":"35","hashOfConfig":"20"},{"size":4732,"mtime":1610247691302,"results":"36","hashOfConfig":"20"},{"size":6195,"mtime":1610251396172,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"vghf01",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/johnornelas/projects/travel-remotely/src/reportWebVitals.js",[],["80","81"],"/Users/johnornelas/projects/travel-remotely/src/index.js",[],["82","83"],"/Users/johnornelas/projects/travel-remotely/src/components/Videobackground/Videobackground.tsx",["84"],"/Users/johnornelas/projects/travel-remotely/src/data/tokyo.ts",[],"/Users/johnornelas/projects/travel-remotely/src/data/cities.ts",[],"/Users/johnornelas/projects/travel-remotely/src/components/Controls/Controls.tsx",["85","86"],"import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport AudioPlayer from 'react-h5-audio-player';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport './audioplayer.css';\n\nimport { cities } from '../../data/cities';\nimport { colors } from '../../data/variables';\nimport { RadioStation } from '../../data/dataTypes';\nimport { getRandomFromList } from '../../utils/getRandomFromList';\nimport { ControlsProps } from './controls-props';\n\nexport const Controls = ({\n  currentCity,\n  currentVideo,\n  options,\n  updateCity,\n  updateOptions,\n  isMuted,\n  setIsMuted,\n}: ControlsProps) => {\n  const [isVisible, setIsVisible] = useState(true);\n  const [currentStation, setCurrentStation] = useState<RadioStation>(\n    getRandomFromList(currentCity.radio),\n  );\n  useEffect(() => {\n    setCurrentStation(currentCity.radio[0]);\n  }, [currentCity]);\n  return (\n    <StyledControls>\n      <HidableContent isVisible={isVisible}>\n        <Header>CITIES:</Header>\n        <Scrollable>\n          {cities.map(city => (\n            <Option\n              isSelected={currentCity.name === city.name}\n              onClick={() => updateCity(city.name)}\n            >\n              <Subheader>{city.name}</Subheader>\n            </Option>\n          ))}\n        </Scrollable>\n        <Header>RADIO STATIONS:</Header>\n        <Scrollable>\n          {currentCity.radio.map(station => (\n            <Option\n              isSelected={station.name === currentStation.name}\n              onClick={() => setCurrentStation(station)}\n            >\n              <Subheader>{station.name}</Subheader>\n              <div>{station.description}</div>\n            </Option>\n          ))}\n        </Scrollable>\n        <Header>OPTIONS:</Header>\n        <Subheader>Method:</Subheader>\n        <RadioContainer\n          onChange={(e: any) => updateOptions('method', e.target.value)}\n        >\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"walk\"\n              name=\"method\"\n              checked={options.method === 'walk'}\n            />\n            Walk\n          </RadioOption>\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"car\"\n              name=\"method\"\n              checked={options.method === 'car'}\n            />\n            Car\n          </RadioOption>\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"train\"\n              name=\"method\"\n              checked={options.method === 'train'}\n            />\n            Train\n          </RadioOption>\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"any\"\n              name=\"method\"\n              checked={options.method === 'any'}\n            />\n            Any\n          </RadioOption>\n        </RadioContainer>\n        <Subheader>Time:</Subheader>\n        <RadioContainer\n          onChange={(e: any) => updateOptions('time', e.target.value)}\n        >\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"day\"\n              name=\"time\"\n              checked={options.time === 'day'}\n            />\n            Day\n          </RadioOption>\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"night\"\n              name=\"time\"\n              checked={options.time === 'night'}\n            />\n            Night\n          </RadioOption>\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"any\"\n              name=\"time\"\n              checked={options.time === 'any'}\n            />\n            Any\n          </RadioOption>\n        </RadioContainer>\n        <Subheader>Street Noise:</Subheader>\n        <RadioContainer\n          onChange={(e: any) => setIsMuted(e.target.value === 'off')}\n        >\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"on\"\n              name=\"streetNoise\"\n              checked={!isMuted}\n            />\n            On\n          </RadioOption>\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"off\"\n              name=\"streetNoise\"\n              checked={isMuted}\n            />\n            Off\n          </RadioOption>\n        </RadioContainer>\n        <LinkRow>\n          <a href=\"https://www.buymeacoffee.com/johnornelas\" target=\"_blank\">\n            <CoffeeButton\n              src=\"https://cdn.buymeacoffee.com/buttons/v2/default-blue.png\"\n              alt=\"Buy Me A Coffee\"\n            />\n          </a>\n          <a href={currentVideo.url} target=\"_blank\">\n            original video\n          </a>\n        </LinkRow>\n      </HidableContent>\n      <LinkRow>\n        <AudioPlayer\n          src={currentStation.url}\n          autoPlay={true}\n          showSkipControls={false}\n          showJumpControls={false}\n          showDownloadProgress={false}\n          showFilledProgress={false}\n          autoPlayAfterSrcChange={true}\n        />\n        <VisibilityContainer\n          isVisible={isVisible}\n          onClick={() => setIsVisible(!isVisible)}\n        >\n          {isVisible ? <VisibilityOff /> : <Visibility />}\n        </VisibilityContainer>\n      </LinkRow>\n    </StyledControls>\n  );\n};\n\nconst StyledControls = styled.div({\n  border: `1px solid ${colors.light02}`,\n  width: '375px',\n  borderRadius: '6px',\n  padding: '8px',\n  position: 'absolute',\n  bottom: 32,\n  right: 32,\n  backgroundColor: colors.darker07,\n  color: colors.lighter,\n});\nconst Option = styled.div`\n  padding: 8px;\n  border-bottom: 1px solid ${colors.light02};\n  background-color: ${({ isSelected }: { isSelected: boolean }) =>\n    isSelected ? colors.light03 : 'inherit'};\n  :hover {\n    cursor: pointer;\n  }\n  &:last-of-type {\n    border-bottom: none;\n  }\n`;\nconst Header = styled.div({\n  fontSize: '14px',\n  fontWeight: 'bold',\n  paddingTop: '4px',\n  paddingBottom: '4px',\n  color: colors.primary,\n});\nconst Subheader = styled.div({\n  fontWeight: 'bold',\n  paddingBottom: '2px',\n  paddingTop: '2px',\n});\nconst RadioContainer = styled.div({\n  display: 'flex',\n  padding: '4px',\n});\nconst RadioOption = styled.div({\n  width: '25%',\n});\nconst LinkRow = styled.div({\n  display: 'flex',\n  paddingTop: '8px',\n  paddingBottom: '8px',\n  color: `${colors.lighter01} !important`,\n  'a:link': {\n    color: colors.lighter09,\n  },\n  'a:visited': {\n    color: colors.primary09,\n  },\n  justifyContent: 'space-between',\n  alignItems: 'center',\n});\nconst CoffeeButton = styled.img({\n  height: '35px',\n  width: '126.6px',\n});\nconst VisibilityContainer = styled.div`\n  color: ${({ isVisible }: { isVisible: boolean }) =>\n    isVisible ? colors.light09 : colors.light07};\n  paddingtop: 4px;\n`;\nconst Scrollable = styled.div({\n  maxHeight: '160px',\n  overflowY: 'scroll',\n});\nconst HidableContent = styled.div`\n  display: ${({ isVisible }: { isVisible: boolean }) =>\n    isVisible ? 'inherit' : 'none'};\n`;\n",["87","88"],"/Users/johnornelas/projects/travel-remotely/src/data/sanfrancisco.ts",[],"/Users/johnornelas/projects/travel-remotely/src/components/Controls/index.ts",[],["89","90"],"/Users/johnornelas/projects/travel-remotely/src/data/variables.ts",[],"/Users/johnornelas/projects/travel-remotely/src/utils/getRandomFromList.ts",[],"/Users/johnornelas/projects/travel-remotely/src/data/bangkok.ts",[],"/Users/johnornelas/projects/travel-remotely/src/data/paris.ts",[],"/Users/johnornelas/projects/travel-remotely/src/data/london.ts",[],"/Users/johnornelas/projects/travel-remotely/src/data/dubai.ts",[],["91","92"],"/Users/johnornelas/projects/travel-remotely/src/data/singapore.ts",[],"/Users/johnornelas/projects/travel-remotely/src/data/kuala-lumpur.ts",[],"/Users/johnornelas/projects/travel-remotely/src/data/newyorkcity.ts",[],"/Users/johnornelas/projects/travel-remotely/src/data/istanbul.ts",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":60,"column":6,"nodeType":"101","endLine":60,"endColumn":20,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":154,"column":62,"nodeType":"105","endLine":154,"endColumn":77},{"ruleId":"103","severity":1,"message":"104","line":160,"column":38,"nodeType":"105","endLine":160,"endColumn":53},{"ruleId":"93","replacedBy":"106"},{"ruleId":"95","replacedBy":"107"},{"ruleId":"93","replacedBy":"108"},{"ruleId":"95","replacedBy":"109"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],["110"],["111"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentCity.videos'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentVideo' needs the current value of 'currentCity.videos'.","ArrayExpression",["112"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["110"],["111"],["110"],["111"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [currentCity.videos, videoOptions]",{"range":"115","text":"116"},[1844,1858],"[currentCity.videos, videoOptions]"]