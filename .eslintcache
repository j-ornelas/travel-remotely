[{"/Users/johnornelas/projects/travel-remotely/src/reportWebVitals.js":"1","/Users/johnornelas/projects/travel-remotely/src/index.js":"2","/Users/johnornelas/projects/travel-remotely/src/components/Videobackground/Videobackground.tsx":"3","/Users/johnornelas/projects/travel-remotely/src/data/tokyo.ts":"4","/Users/johnornelas/projects/travel-remotely/src/data/cities.ts":"5","/Users/johnornelas/projects/travel-remotely/src/components/Controls/Controls.tsx":"6","/Users/johnornelas/projects/travel-remotely/src/data/sanfrancisco.ts":"7","/Users/johnornelas/projects/travel-remotely/src/components/Controls/index.ts":"8","/Users/johnornelas/projects/travel-remotely/src/data/variables.ts":"9","/Users/johnornelas/projects/travel-remotely/src/utils/getRandomFromList.ts":"10"},{"size":362,"mtime":1609536298521,"results":"11","hashOfConfig":"12"},{"size":515,"mtime":1609538832922,"results":"13","hashOfConfig":"12"},{"size":3393,"mtime":1609660740716,"results":"14","hashOfConfig":"12"},{"size":1179,"mtime":1609649499855,"results":"15","hashOfConfig":"16"},{"size":126,"mtime":1609550222525,"results":"17","hashOfConfig":"12"},{"size":7078,"mtime":1609660581759,"results":"18","hashOfConfig":"12"},{"size":1765,"mtime":1609649478547,"results":"19","hashOfConfig":"12"},{"size":65,"mtime":1609548715012,"results":"20","hashOfConfig":"12"},{"size":2128,"mtime":1609632272396,"results":"21","hashOfConfig":"12"},{"size":99,"mtime":1609620794565,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vghf01",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1aevf67",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/johnornelas/projects/travel-remotely/src/reportWebVitals.js",[],"/Users/johnornelas/projects/travel-remotely/src/index.js",[],["46","47"],"/Users/johnornelas/projects/travel-remotely/src/components/Videobackground/Videobackground.tsx",["48"],"/Users/johnornelas/projects/travel-remotely/src/data/tokyo.ts",[],"/Users/johnornelas/projects/travel-remotely/src/data/cities.ts",[],"/Users/johnornelas/projects/travel-remotely/src/components/Controls/Controls.tsx",["49","50"],"import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport AudioPlayer from 'react-h5-audio-player';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport './audioplayer.css';\n\nimport { cities } from '../../data/cities';\nimport { colors } from '../../data/variables';\nimport { RadioStation } from '../../data/dataTypes';\nimport { getRandomFromList } from '../../utils/getRandomFromList';\nimport { ControlsProps } from './controls-props';\n\nexport const Controls = ({\n  currentCity,\n  currentVideo,\n  options,\n  updateCity,\n  updateOptions,\n  isMuted,\n  setIsMuted,\n}: ControlsProps) => {\n  const [isVisible, setIsVisible] = useState(true);\n  const [currentStation, setCurrentStation] = useState<RadioStation>(\n    getRandomFromList(currentCity.radio),\n  );\n  useEffect(() => {\n    setCurrentStation(currentCity.radio[0]);\n  }, [currentCity]);\n  return isVisible ? (\n    <StyledControls>\n      <div>\n        <Header>CITIES:</Header>\n        <Scrollable>\n          {cities.map(city => (\n            <Option\n              isSelected={currentCity.name === city.name}\n              onClick={() => updateCity(city.name)}\n            >\n              <Subheader>{city.name}</Subheader>\n            </Option>\n          ))}\n        </Scrollable>\n        <Header>RADIO STATIONS:</Header>\n        <Scrollable>\n          {currentCity.radio.map(station => (\n            <Option\n              isSelected={station.name === currentStation.name}\n              onClick={() => setCurrentStation(station)}\n            >\n              <Subheader>{station.name}</Subheader>\n              <div>{station.description}</div>\n            </Option>\n          ))}\n        </Scrollable>\n        <Header>OPTIONS:</Header>\n        <Subheader>Method:</Subheader>\n        <RadioContainer\n          onChange={(e: any) => updateOptions('method', e.target.value)}\n        >\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"walk\"\n              name=\"method\"\n              checked={options.method === 'walk'}\n            />\n            Walk\n          </RadioOption>\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"car\"\n              name=\"method\"\n              checked={options.method === 'car'}\n            />\n            Car\n          </RadioOption>\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"train\"\n              name=\"method\"\n              checked={options.method === 'train'}\n            />\n            Train\n          </RadioOption>\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"any\"\n              name=\"method\"\n              checked={options.method === 'any'}\n            />\n            Any\n          </RadioOption>\n        </RadioContainer>\n        <Subheader>Time:</Subheader>\n        <RadioContainer\n          onChange={(e: any) => updateOptions('time', e.target.value)}\n        >\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"day\"\n              name=\"time\"\n              checked={options.time === 'day'}\n            />\n            Day\n          </RadioOption>\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"night\"\n              name=\"time\"\n              checked={options.time === 'night'}\n            />\n            Night\n          </RadioOption>\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"any\"\n              name=\"time\"\n              checked={options.time === 'any'}\n            />\n            Any\n          </RadioOption>\n        </RadioContainer>\n        <Subheader>Street Noise:</Subheader>\n        <RadioContainer\n          onChange={(e: any) => setIsMuted(e.target.value === 'off')}\n        >\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"on\"\n              name=\"streetNoise\"\n              checked={!isMuted}\n            />\n            On\n          </RadioOption>\n          <RadioOption>\n            <input\n              type=\"radio\"\n              value=\"off\"\n              name=\"streetNoise\"\n              checked={isMuted}\n            />\n            Off\n          </RadioOption>\n        </RadioContainer>\n      </div>\n      <AudioPlayer\n        src={currentStation.url}\n        autoPlay={true}\n        showSkipControls={false}\n        showJumpControls={false}\n        showDownloadProgress={false}\n        showFilledProgress={false}\n        autoPlayAfterSrcChange={true}\n      />\n      <LinkRow>\n        <a href=\"https://www.buymeacoffee.com/johnornelas\" target=\"_blank\">\n          <CoffeeButton\n            src=\"https://cdn.buymeacoffee.com/buttons/v2/default-blue.png\"\n            alt=\"Buy Me A Coffee\"\n          />\n        </a>\n        <a href={currentVideo.url} target=\"_blank\">\n          original video\n        </a>\n        <VisibilityContainer\n          isVisible={isVisible}\n          onClick={() => setIsVisible(false)}\n        >\n          <VisibilityOff />\n        </VisibilityContainer>\n      </LinkRow>\n    </StyledControls>\n  ) : (\n    <HiddenContainer>\n      <VisibilityContainer\n        onClick={() => setIsVisible(true)}\n        isVisible={isVisible}\n      >\n        <Visibility />\n      </VisibilityContainer>\n    </HiddenContainer>\n  );\n};\n\nconst StyledControls = styled.div({\n  border: `1px solid ${colors.light02}`,\n  width: '375px',\n  borderRadius: '6px',\n  padding: '8px',\n  paddingBottom: 0,\n  position: 'absolute',\n  bottom: 32,\n  right: 32,\n  backgroundColor: colors.darker07,\n  color: colors.lighter,\n});\nconst HiddenContainer = styled.div({\n  position: 'absolute',\n  bottom: 43,\n  right: 33,\n  padding: '0 8px 0 0',\n});\nconst Option = styled.div`\n  padding: 8px;\n  border-bottom: 1px solid ${colors.light02};\n  background-color: ${({ isSelected }: { isSelected: boolean }) =>\n    isSelected ? colors.light03 : 'inherit'};\n  :hover {\n    cursor: pointer;\n  }\n  &:last-of-type {\n    border-bottom: none;\n  }\n`;\nconst Header = styled.div({\n  fontSize: '14px',\n  fontWeight: 'bold',\n  paddingTop: '4px',\n  paddingBottom: '4px',\n  color: colors.primary,\n});\nconst Subheader = styled.div({\n  fontWeight: 'bold',\n  paddingBottom: '2px',\n  paddingTop: '2px',\n});\nconst RadioContainer = styled.div({\n  display: 'flex',\n  padding: '4px',\n});\nconst RadioOption = styled.div({\n  width: '25%',\n});\nconst LinkRow = styled.div({\n  display: 'flex',\n  paddingTop: '4px',\n  paddingBottom: '4px',\n  color: `${colors.lighter01} !important`,\n  'a:link': {\n    color: colors.lighter09,\n  },\n  'a:visited': {\n    color: colors.primary09,\n  },\n  justifyContent: 'space-between',\n  alignItems: 'center',\n});\nconst CoffeeButton = styled.img({\n  height: '35px',\n  width: '126.6px',\n});\nconst VisibilityContainer = styled.div`\n  color: ${({ isVisible }: { isVisible: boolean }) =>\n    isVisible ? colors.light09 : colors.light07};\n  paddingtop: 4px;\n`;\nconst Scrollable = styled.div({\n  maxHeight: '160px',\n  overflowY: 'scroll',\n});\n","/Users/johnornelas/projects/travel-remotely/src/data/sanfrancisco.ts",[],["51","52"],"/Users/johnornelas/projects/travel-remotely/src/components/Controls/index.ts",[],"/Users/johnornelas/projects/travel-remotely/src/data/variables.ts",[],"/Users/johnornelas/projects/travel-remotely/src/utils/getRandomFromList.ts",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":60,"column":6,"nodeType":"59","endLine":60,"endColumn":20,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":164,"column":60,"nodeType":"63","endLine":164,"endColumn":75},{"ruleId":"61","severity":1,"message":"62","line":170,"column":36,"nodeType":"63","endLine":170,"endColumn":51},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentCity.videos'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentVideo' needs the current value of 'currentCity.videos'.","ArrayExpression",["66"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [currentCity.videos, videoOptions]",{"range":"69","text":"70"},[1844,1858],"[currentCity.videos, videoOptions]"]